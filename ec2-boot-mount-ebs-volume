#!/bin/bash
#
# Copyright 2019 - binx.io B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
set -e -o pipefail 
exec 1> >(logger -s -t $(basename $0)) 2>&1


function wait_for_device {
	while [[ ! -b $(readlink -f $1) ]]; do
	    echo "waiting for device $1" >&2 
	    sleep 5; 
        done 
}

function label_device {
	label=$(blkid $1 | sed -e 's/.*LABEL="\([^"]*\)".*/\1/')
	if [[ -z $label ]]; then 
		echo "INFO: labeling $1 with $2">&2
		e2label $1 $2; 
	elif [[ $label != $2 ]]; then
		echo "ERROR: device $1 already has label $label, expected $2">&2; exit 1
	fi
}

function main {
	local device mount_point fstype options
	if [[ $# -ne 4 ]] ;then
		echo "Usage: $(basename $0) device-name mount-point fstype options" >&2
		echo "	waits for the volume, formats it if unformatted and mounts it." >&2
		exit 1 
	fi
	device="$1" 
	mount_point="$2"
	fstype="$3"
	options="$4"

	wait_for_device $device
        real_device=$(readlink -f $device)
	if [[ $real_device != $device ]] ;then
		echo "INFO: $device appeared as $real_device" >&2
	fi

	if grep -q "^$real_device $mount_point " /proc/mounts; then
		echo "INFO: $real_device already mounted on $mount_point" >&2
		return 0
	fi

	if [[ -z $(blkid $real_device) ]] ; then
		echo "INFO: formatting $real_device" >&2
		mkfs -L $mount_point -t $fstype $real_device
	else
		echo "INFO: $real_device already formatted" >&2
		label_device $real_device $mount_point
	fi

	if ! grep -q "^LABEL=$mount_point $mount_point" /etc/fstab; then
		echo "INFO: adding entry to /etc/fstab" >&2
		cp /etc/fstab /etc/fstab.org
		awk -v mount_point=$mount_point '{if ($2 != mount_point) print $0}' /etc/fstab.org > /etc/fstab
		echo "LABEL=$mount_point $mount_point $fstype $options" >> /etc/fstab
	fi

	echo "INFO: mounting $real_device on $mount_point" >&2
	mkdir -p $mount_point
	mount $mount_point
}

main "$@"
